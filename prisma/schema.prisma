generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {

  id                 String @id @default(uuid())
  title              String @unique
  coverImageUrl      String @unique
  description        String @unique
  year               Int
  imdbScore          Float
  trailerYoutubeUrl  String @unique
  gameplayYoutubeUrl String @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  favorite Favorite[] @relation(references: [id])
  genders  Genre[]
  profiles Profile[]

  @@map("games")

}

model Genre {

  id   String @id @default(uuid())
  name String @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")


  games Game[]
  @@map("genres")

}

model User {

  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  image    String
  cpf      String  @unique
  isAdmin  Boolean @map("is_admin")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  profiles Profile[]

  @@map("users")

}

model Profile {

  id       String @id @default(uuid())
  title    String @unique
  imageURL String

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  favorite Favorite[]
  games Game[]

  @@map("profile")

}

model Favorite {

  id String @id @default(uuid())

  profile Profile   @relation(fields: [profileId], references: [id])
  profileId String @map("user_id")

  games Game[] @relation(references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("favorite")

}
